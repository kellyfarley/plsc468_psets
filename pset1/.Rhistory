thisDat <- c(url, committee, abstract)
pres <- rbind(pres, thisDat)
names(pres) <-  c("url", "committee", "abstract")
}
# TO DO: change loop to go to 1
#PETITION
pet <- data.frame(matrix(ncol=3,nrow=0))
for(i in 96:94)
{
pet_url=paste("https://www.congress.gov/house-communication/117th-congress/petition/",i,"?s=3&r=", 97-i, sep='')
print(pet_url)
obs <- read_html(GET(pet_url, config(ssl_verifypeer = FALSE)))
nodes <- obs %>%
html_nodes("p")
text <- html_text(nodes)
#collecting abstracts
abstract <- text[3]
#committees
comm_nodes <- obs %>%
html_nodes("li")
x <- grep("[0-9]{2}/[0-9]{2}/[0-9]{4}", comm_nodes)
committee <- comm_nodes[x]
committee <- gsub("<[^<>]*>", "", committee)
committee <- gsub("\n", "", committee, fixed = TRUE)
committee <- gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}", "", committee)
committee <- gsub(" — ", "", committee, fixed = TRUE)
#dataframe
thisDat <- c(url, committee, abstract)
pet <<- rbind(pet, thisDat)
names(pet) <-  c("url", "committee", "abstract")
}
# TO DO: collect committee; need to clean up date and abstract; change loop to go to 1
#MEMORIAL
mem <- data.frame(matrix(ncol=3,nrow=0))
for(i in 138:137)
{
mem_url=paste("https://www.congress.gov/house-communication/117th-congress/memorial/",i,"?s=3&r=", 139-i, sep='')
print(mem_url)
obs <- read_html(GET(mem_url, config(ssl_verifypeer = FALSE)))
nodes <- obs %>%
html_nodes("p")
text <- html_text(nodes)
#collecting abstracts
abstract <- text[3]
#committees
comm_nodes <- obs %>%
html_nodes("li")
x <- grep("[0-9]{2}/[0-9]{2}/[0-9]{4}", comm_nodes)
committee <- comm_nodes[x]
committee <- gsub("<[^<>]*>", "", committee)
committee <- gsub("\n", "", committee, fixed = TRUE)
committee <- gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}", "", committee)
committee <- gsub(" — ", "", committee, fixed = TRUE)
committee <- paste(committee, collapse="")
thisDat <- c(url, committee, abstract)
mem <- rbind(mem, thisDat)
names(mem) <-  c("url", "committee", "abstract")
}
# TO DO: collect committee; need to clean up date and abstract; change loop to go to 1
View(mem)
mem <- data.frame(matrix(ncol=3,nrow=0))
for(i in 138:137)
{
mem_url=paste("https://www.congress.gov/house-communication/117th-congress/memorial/",i,"?s=3&r=", 139-i, sep='')
print(mem_url)
obs <- read_html(GET(mem_url, config(ssl_verifypeer = FALSE)))
nodes <- obs %>%
html_nodes("p")
text <- html_text(nodes)
#collecting abstracts
abstract <- text[3]
#committees
comm_nodes <- obs %>%
html_nodes("li")
x <- grep("[0-9]{2}/[0-9]{2}/[0-9]{4}", comm_nodes)
committee <- comm_nodes[x]
committee <- gsub("<[^<>]*>", "", committee)
committee <- gsub("\n", "", committee, fixed = TRUE)
committee <- gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}", "", committee)
committee <- gsub(" — ", "", committee, fixed = TRUE)
committee <- paste(committee, collapse=", ")
thisDat <- c(url, committee, abstract)
mem <- rbind(mem, thisDat)
names(mem) <-  c("url", "committee", "abstract")
}
View(mem)
#Goal: scrape abstract text, date, legislative committee(s) (if any)
exec <- data.frame(matrix(ncol=3,nrow=0))
# will need to add 4th column for committee
for (i in 3414:3413)
{
url <- paste("https://www.congress.gov/house-communication/117th-congress/executive-communication/",i,"?s=1&r=",3415-i, sep='')
print(url)
obs <- read_html(GET(url, config(ssl_verifypeer = FALSE)))
nodes <- obs %>%
html_nodes("p")
text <- html_text(nodes)
#collecting abstracts
abstract <- text[3]
#committees
comm_nodes <- obs %>%
html_nodes("li")
x <- grep("[0-9]{2}/[0-9]{2}/[0-9]{4}", comm_nodes)
committee <- comm_nodes[x]
committee <- gsub("<[^<>]*>", "", committee)
committee <- gsub("\n", "", committee, fixed = TRUE)
committee <- gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}", "", committee)
committee <- gsub(" — ", "", committee, fixed = TRUE)
committee <- paste(committee, collapse=", ")
#datafram
thisDat <- c(url, committee, abstract)
exec <- rbind(exec, thisDat)
names(exec) <-  c("url", "committee", "abstract")
}
# TO DO: collect committee; need to clean up date and abstract; change loop to go to 1
#PRESIDENTIAL MESSAGE
pres <- data.frame(matrix(ncol=3,nrow=0))
for(i in 19:11)
{
pres_url=paste("https://www.congress.gov/house-communication/117th-congress/presidential-message/",i,"?s=3&r=", 20-i, sep='')
print(pres_url)
obs <- read_html(GET(pres_url, config(ssl_verifypeer = FALSE)))
nodes <- obs %>%
html_nodes("p")
text <- html_text(nodes)
#collecting abstracts
abstract <- text[3]
#COMMITTEE
comm_nodes <- obs %>%
html_nodes("li")
x <- grep("[0-9]{2}/[0-9]{2}/[0-9]{4}", comm_nodes)
committee <- comm_nodes[x]
committee <- gsub("<[^<>]*>", "", committee)
#removes exactly in parens
committee <- gsub("\n", "", committee, fixed = TRUE)
#removing date
committee <- gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}", "", committee)
committee <- gsub(" — ", "", committee, fixed = TRUE)
committee <- paste(committee, collapse=", ")
#making df
thisDat <- c(url, committee, abstract)
pres <- rbind(pres, thisDat)
names(pres) <-  c("url", "committee", "abstract")
}
# TO DO: change loop to go to 1
#PETITION
pet <- data.frame(matrix(ncol=3,nrow=0))
for(i in 96:94)
{
pet_url=paste("https://www.congress.gov/house-communication/117th-congress/petition/",i,"?s=3&r=", 97-i, sep='')
print(pet_url)
obs <- read_html(GET(pet_url, config(ssl_verifypeer = FALSE)))
nodes <- obs %>%
html_nodes("p")
text <- html_text(nodes)
#collecting abstracts
abstract <- text[3]
#committees
comm_nodes <- obs %>%
html_nodes("li")
x <- grep("[0-9]{2}/[0-9]{2}/[0-9]{4}", comm_nodes)
committee <- comm_nodes[x]
committee <- gsub("<[^<>]*>", "", committee)
committee <- gsub("\n", "", committee, fixed = TRUE)
committee <- gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}", "", committee)
committee <- gsub(" — ", "", committee, fixed = TRUE)
committee <- paste(committee, collapse=", ")
#dataframe
thisDat <- c(url, committee, abstract)
pet <<- rbind(pet, thisDat)
names(pet) <-  c("url", "committee", "abstract")
}
# TO DO: collect committee; need to clean up date and abstract; change loop to go to 1
#MEMORIAL
mem <- data.frame(matrix(ncol=3,nrow=0))
for(i in 138:137)
{
mem_url=paste("https://www.congress.gov/house-communication/117th-congress/memorial/",i,"?s=3&r=", 139-i, sep='')
print(mem_url)
obs <- read_html(GET(mem_url, config(ssl_verifypeer = FALSE)))
nodes <- obs %>%
html_nodes("p")
text <- html_text(nodes)
#collecting abstracts
abstract <- text[3]
#committees
comm_nodes <- obs %>%
html_nodes("li")
x <- grep("[0-9]{2}/[0-9]{2}/[0-9]{4}", comm_nodes)
committee <- comm_nodes[x]
committee <- gsub("<[^<>]*>", "", committee)
committee <- gsub("\n", "", committee, fixed = TRUE)
committee <- gsub("[0-9]{2}/[0-9]{2}/[0-9]{4}", "", committee)
committee <- gsub(" — ", "", committee, fixed = TRUE)
committee <- paste(committee, collapse=", ")
thisDat <- c(url, committee, abstract)
mem <- rbind(mem, thisDat)
names(mem) <-  c("url", "committee", "abstract")
}
# TO DO: collect committee; need to clean up date and abstract; change loop to go to 1
View(exec)
View(pres)
View(pet)
View(mem)
str(cleantxt)
cleantxt[1]
txts_1b
txts_1b[1]
D1972
freq10[5]
freq10[3]
freq10[4]
urls
freq10[5,1]
freq10[5
]
names(freq10[5])
freq10[5][[1]]
str(freq10[5])
freq10[5][[1]]
freq10[2]
freq10[5]
# dem tdm
dtdm <- TermDocumentMatrix(corpus[1:3])
# republican tdm
rtdm <- TermDocumentMatrix(corpus[4:6])
demFreq1972 <- "main"
repFreq1972 <- "support"
## dem platforms
#dem word - dem platforms
findAssocs(dtdm, demFreq1972, 0.9)
#repub word - dem platforms
findAssocs(dtdm, repFreq1972, 0.9)
## repub platforms
#dem word - repub platforms
findAssocs(rtdm, demFreq1972, 0.9)
#repub word - repub platforms
findAssocs(rtdm, repFreq1972, 0.9)
# dem tdm
dtdm <- TermDocumentMatrix(corpus[1:3])
# republican tdm
rtdm <- TermDocumentMatrix(corpus[4:6])
freq1972 <- "state"
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(rtdm, freq1972, 0.9984)
findAssocs(dtdm, freq1972, 0.99999)
findAssocs(dtdm, freq1972, 0.99998)
findAssocs(dtdm, freq1972, 0.9998)
findAssocs(dtdm, freq1972, 0.99983)
findAssocs(dtdm, freq1972, 0.99987)
findAssocs(dtdm, freq1972, 0.99989)
findAssocs(dtdm, freq1972, 0.9999)
findAssocs(dtdm, freq1972, 0.99999)
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(dtdm, freq1972, 0.99998)
findAssocs(dtdm, freq1972, 0.99997)
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(dtdm, freq1972, 0.999960)
findAssocs(dtdm, freq1972, 0.999969)
findAssocs(dtdm, freq1972, 0.999965)
findAssocs(dtdm, freq1972, 0.99996)
sort(findAssocs(dtdm, freq1972, 0.99996))
str(findAssocs(dtdm, freq1972, 0.99996))
temp <- findAssocs(dtdm, freq1972, 0.99996)
temp2 <- temp[order(names(temp))]
temp2
lst <- temp
lst[order(unlist(lst),decreasing=TRUE)]
unlist(lst)
order(unlist(lst))
temp3 <- unlist(lst)
temp3
order(temp3)
str(temp3)
sort(temp3)
data.frame(V1=sort(lst, decreasing=TRUE))
lst
str(lst)
lst[[1]]
unlist(lst)
unl <-unlist(lst)
unl
vales(unl)
values(unl)
names(unl)
str(unl)
coefficients(out)[["unl"]]
coefficients(unl)
sort(unl)
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(dtdm, freq1972, 0.99997)
findAssocs(dtdm, freq1972, 0.999966)
findAssocs(dtdm, freq1972, 0.999968)
findAssocs(dtdm, freq1972, 0.999967)
findAssocs(dtdm, freq1972, 0.999968)
findAssocs(dtdm, freq1972, 0.9999679)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.9999676)
findAssocs(dtdm, freq1972, 0.9999674)
findAssocs(dtdm, freq1972, 0.99996749)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.9999679)
findAssocs(dtdm, freq1972, 0.9999676)
findAssocs(dtdm, freq1972, 0.9999674)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.9999676)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.99996759)
# dem tdm
dtdm <- TermDocumentMatrix(corpus[1:3])
# republican tdm
rtdm <- TermDocumentMatrix(corpus[4:6])
freq1972 <- "state"
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(rtdm, freq1972, 0.9984)
# dem tdm
dtdm <- TermDocumentMatrix(corpus[1:3])
# republican tdm
rtdm <- TermDocumentMatrix(corpus[4:6])
freq1972 <- "state"
findAssocs(dtdm, freq1972, 0.999)
findAssocs(rtdm, freq1972, 0.999)
# dem tdm
dtdm <- TermDocumentMatrix(corpus[1:3])
# republican tdm
rtdm <- TermDocumentMatrix(corpus[4:6])
freq1972 <- "state"
findAssocs(dtdm, freq1972, 0.99)
findAssocs(rtdm, freq1972, 0.99)
findAssocs(dtdm, freq1972, 0.9999)
findAssocs(dtdm, freq1972, 0.99999)
findAssocs(dtdm, freq1972, 0.9999)
findAssocs(dtdm, freq1972, 0.99998)
findAssocs(dtdm, freq1972, 0.99995)
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(dtdm, freq1972, 0.99997)
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(dtdm, freq1972, 0.99995)
findAssocs(dtdm, freq1972, 0.99997)
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(dtdm, freq1972, 0.999969)
findAssocs(dtdm, freq1972, 0.999965)
findAssocs(dtdm, freq1972, 0.999966)
findAssocs(dtdm, freq1972, 0.999967)
findAssocs(dtdm, freq1972, 0.999968)
findAssocs(dtdm, freq1972, 0.999967)
findAssocs(dtdm, freq1972, 0.9999679)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.9999677)
findAssocs(dtdm, freq1972, 0.9999676)
findAssocs(dtdm, freq1972, 0.9999679)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.9999676)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.99996759)
temp <- findAssocs(dtdm, freq1972, 0.99)
max(temp)
str(temp)
temp$state
temp$state[1]
max(temp$state)
which(temp$state==max(temp$state))
temp$state[which(temp$state==max(temp$state))]
findAssocs(dtdm, freq1972, 0.99)
findAssocs(rtdm, freq1972, 0.99)
findAssocs(dtdm, freq1972, 0.99)
findAssocs(dtdm, freq1972, 0.99)
findAssocs(dtdm, freq1972, 0.999)
findAssocs(dtdm, freq1972, 0.9999)
findAssocs(dtdm, freq1972, 0.99999)
findAssocs(dtdm, freq1972, 0.99998)
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(dtdm, freq1972, 0.99997)
findAssocs(dtdm, freq1972, 0.99996)
findAssocs(dtdm, freq1972, 0.999965)
findAssocs(dtdm, freq1972, 0.999967)
findAssocs(dtdm, freq1972, 0.999969)
findAssocs(dtdm, freq1972, 0.999968)
findAssocs(dtdm, freq1972, 0.999967)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.9999677)
findAssocs(dtdm, freq1972, 0.9999676)
findAssocs(dtdm, freq1972, 0.9999675)
findAssocs(dtdm, freq1972, 0.99996759)
findAssocs(dtdm, freq1972, 0.99996758)
findAssocs(dtdm, freq1972, 0.99996757)
findAssocs(dtdm, freq1972, 0.99996756)
findAssocs(dtdm, freq1972, 0.99996755)
findAssocs(dtdm, freq1972, 0.999967559)
findAssocs(dtdm, freq1972, 0.999967558)
findAssocs(dtdm, freq1972, 0.999967557)
findAssocs(dtdm, freq1972, 0.999967556)
findAssocs(dtdm, freq1972, 0.999967555)
findAssocs(dtdm, freq1972, 0.999967554)
findAssocs(dtdm, freq1972, 0.999967553)
findAssocs(dtdm, freq1972, 0.999967552)
findAssocs(dtdm, freq1972, 0.999967551)
findAssocs(dtdm, freq1972, 0.999967552)
findAssocs(dtdm, freq1972, 0.999967551)
findAssocs(dtdm, freq1972, 0.9999675515)
findAssocs(dtdm, freq1972, 0.9999675517)
findAssocs(dtdm, freq1972, 0.9999675516)
findAssocs(dtdm, freq1972, 0.99996755169)
findAssocs(dtdm, freq1972, 0.99996755165)
findAssocs(dtdm, freq1972, 0.99996755163)
findAssocs(dtdm, freq1972, 0.99996755162)
findAssocs(dtdm, freq1972, 0.99996755161)
findAssocs(dtdm, freq1972, 0.9999675516)
findAssocs(dtdm, freq1972, 0.99996755161)
findAssocs(dtdm, freq1972, 0.9999)
findAssocs(rtdm, freq1972, 0.9999)
findAssocs(rtdm, freq1972, 0.999
)
findAssocs(rtdm, freq1972, 0.998
)
findAssocs(rtdm, freq1972, 0.998)
findAssocs(rtdm, freq1972, 0.999)
findAssocs(rtdm, freq1972, 0.9989)
findAssocs(rtdm, freq1972, 0.9988)
findAssocs(rtdm, freq1972, 0.9985)
findAssocs(rtdm, freq1972, 0.9984)
findAssocs(rtdm, freq1972, 0.9985)
findAssocs(rtdm, freq1972, 0.9984)
findAssocs(dtdm, freq1972, 0.9999)
?findAssocs
findAssocs(dtdm, freq1972, 0.9999)
temp <- findAssocs(dtdm, freq1972, 0.9999)
str(temp)
temp2 <- unlist(temp)
temp2
str(temp2)
temp2$coefficients
temp2$coefficients[["state.civil"]]
temp2[[coefficients]]
is.atomic(temp2)
temp2[[state.civil]]
temp2[["state.civil"]]
temp2[["state.civil"]] > temp2[["state.feder"]]
temp3 <- as.data.frame(temp2)
temp3
sort(temp3)
temp3[order(temp2),]
temp3
topDem <- findAssocs(dtdm, freq1972, 0.9999)
topDem <- as.data.frame(unlist(topDem))
topDem
topDem <- findAssocs(dtdm, freq1972, 0.9999)
topDem <- as.data.frame(unlist(topDem), names="association")
topDem
str(topDem)
names(topDem)
topDem <- findAssocs(dtdm, freq1972, 0.9999)
topDem <- as.data.frame(unlist(topDem))
names(topDem) <- "association"
topDem
View(topDem)
temp2[["state.civil"]] == temp2[["state.feder"]]
topDem <- findAssocs(dtdm, freq1972, 0.9999)
topDem <- as.data.frame(unlist(topDem))
names(topDem) <- "association"
topDem <- topDem[order(topDem$association),]
topDem
topDem
View(topDem)
topDem <- findAssocs(dtdm, freq1972, 0.9999)
topDem <- as.data.frame(unlist(topDem))
names(topDem) <- "association"
topDem <- topDem[order(association),]
topDem <- findAssocs(dtdm, freq1972, 0.9999)
topDem <- as.data.frame(unlist(topDem))
names(topDem) <- "association"
topDem
topDem[order(association),]
topDem[order(topDem$association),]
topDem[order(topDem$association),]
str(topDem)
findAssocs(rtdm, freq1972, 0.9984)
findAssocs(rtdm, freq1972, 0.9985)
findAssocs(rtdm, freq1972, 0.9984)
topDem <- findAssocs(dtdm, freq1972, 0.9999)
findAssocs(dtdm, freq1972, 0.9999)
findAssocs(rtdm, freq1972, 0.9984)
findAssocs(rtdm, freq1972, 0.9985)
findAssocs(rtdm, freq1972, 0.99849)
findAssocs(rtdm, freq1972, 0.99842)
findAssocs(rtdm, freq1972, 0.99843)
findAssocs(rtdm, freq1972, 0.99844)
findAssocs(rtdm, freq1972, 0.99845)
findAssocs(rtdm, freq1972, 0.99844)
findAssocs(rtdm, freq1972, 0.998449)
findAssocs(rtdm, freq1972, 0.998445)
findAssocs(rtdm, freq1972, 0.998443)
findAssocs(rtdm, freq1972, 0.998442)
findAssocs(rtdm, freq1972, 0.9984425)
findAssocs(rtdm, freq1972, 0.9984426)
findAssocs(rtdm, freq1972, 0.9984429)
findAssocs(rtdm, freq1972, 0.9984428)
findAssocs(rtdm, freq1972, 0.998)
findAssocs(rtdm, freq1972, 0.9989)
findAssocs(rtdm, freq1972, 0.9986)
findAssocs(rtdm, freq1972, 0.9983)
findAssocs(rtdm, freq1972, 0.9984)
findAssocs(rtdm, freq1972, 0.9985)
findAssocs(rtdm, freq1972, 0.9984)
findAssocs(dtdm, freq1972, 0.9999)
findAssocs(dtdm, freq1972, 0.9998)
findAssocs(dtdm, freq1972, 0.9995)
findAssocs(dtdm, freq1972, 0.9993)
findAssocs(dtdm, freq1972, 0.9992)
findAssocs(dtdm, freq1972, 0.999)
findAssocs(dtdm, freq1972, 0.995)
findAssocs(dtdm, freq1972, 0.994)
