ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(color = "grey", alpha = .9) +
geom_jitter() +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="green") +
geom_line(data = sumMajority, aes(y=mean_majority), color="orange") +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(color = "red", alpha = .9) +
geom_jitter() +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="green") +
geom_line(data = sumMajority, aes(y=mean_majority), color="orange") +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point() +
geom_jitter(color = "red") +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="green") +
geom_line(data = sumMajority, aes(y=mean_majority), color="orange") +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter") +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="green") +
geom_line(data = sumMajority, aes(y=mean_majority), color="orange") +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", color = "grey") +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="green") +
geom_line(data = sumMajority, aes(y=mean_majority), color="orange") +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", color = "grey") +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "text", x = 2007, y = 7.5, label = "Median", color = "red", size = 3) +
annotate(geom = "text", x = 2007, y = 5, label = "Median", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", color = "grey") +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "text", x = 2007, y = 8, label = "Median", color = "red", size = 3) +
annotate(geom = "text", x = 2007, y = 6, label = "Median", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", color = "grey") +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "text", x = 2007, y = 8.2, label = "Median", color = "red", size = 3) +
annotate(geom = "text", x = 2007, y = 7, label = "Median", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", alpha = .7) +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "text", x = 2007, y = 8.4, label = "Median", color = "red", size = 3) +
annotate(geom = "text", x = 2007, y = 6.8, label = "Median", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", alpha = .2) +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "text", x = 2007, y = 8.4, label = "Median", color = "red", size = 3) +
annotate(geom = "text", x = 2007, y = 6.8, label = "Median", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", alpha = .2) +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "text", x = 2007, y = 8.4, label = "Median", color = "red", size = 3) +
annotate(geom = "text", x = 2007, y = 6.6, label = "Median", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", alpha = .2) +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "label", x = 2007, y = 8.4, label = "Median", color = "red", size = 3) +
annotate(geom = "label", x = 2007, y = 6.6, label = "Median", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", alpha = .2) +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "label", x = 1960, y = 8.4, label = "Median", color = "red", size = 3) +
annotate(geom = "label", x = 1960, y = 6.6, label = "Mean", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(dat, aes(x=term, y=majority_vote)) +
geom_point(position = "jitter", alpha = .2) +
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
geom_line(data = sumMajority, aes(y=median_majority), color="red") +
geom_line(data = sumMajority, aes(y=mean_majority), color="blue") +
annotate(geom = "label", x = 1960, y = 8.4, label = "Median", color = "red", size = 3) +
annotate(geom = "label", x = 1960, y = 7.5, label = "Mean", color = "blue", size = 3) +
ylab("Majority Votes") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
levels(dat$disposition)
affirmRemand <- dat %>%
mutate(disposition_binary = case_when(disposition == "affirmed" ~ "affirmed",
disposition %in% c("reversed", "reversed in-part", "reversed in-part/remanded", "reversed/remanded") ~ "remanded")
View(affirmRemand)
c("reversed", "reversed in-part", "reversed in-part/remanded", "reversed/remanded")
disposition %in% c("reversed", "reversed in-part", "reversed in-part/remanded", "reversed/remanded")
dat$disposition %in% c("reversed", "reversed in-part", "reversed in-part/remanded", "reversed/remanded")
dat %>%
mutate(disposition_binary = case_when(disposition == "affirmed" ~ "affirmed",
disposition %in% c("reversed", "reversed in-part", "reversed in-part/remanded", "reversed/remanded") ~ "remanded")
affirmRemand <- dat %>%
disposition %in% c("reversed", "reversed in-part", "reversed in-part/remanded", "reversed/remanded")
affirmRemand <- dat %>%
filter(disposition == "affirmed" || "reversed")
affirmRemand <- dat %>%
filter(disposition == "affirmed" | "reversed")
affirmRemand <- dat %>%
filter(disposition == "affirmed",
disposition == "reversed")
View(affirmRemand)
affirmRemand <- dat %>%
filter(disposition == "affirmed" | disposition == "reversed")
View(affirmRemand)
affirmRemand <- dat %>%
filter(disposition == "affirmed" | disposition == "reversed") %>%
group_by(term)
View(affirmRemand)
affirmRemand <- dat %>%
filter(disposition == "affirmed" | disposition == "reversed") %>%
group_by(term) %>%
summarise(count = n())
View(affirmRemand)
affirmRemand <- dat %>%
filter(disposition == "affirmed" | disposition == "reversed") %>%
group_by(disposition) %>%
summarise(count = n())
View(affirmRemand)
affirmRemand <- dat %>%
filter(disposition == "affirmed" | disposition == "reversed") %>%
group_by(disposition, term) %>%
summarise(count = n())
View(affirmRemand)
affirmRemand <- dat %>%
filter(disposition == "affirmed" | disposition == "reversed") %>%
group_by(disposition, term) %>%
summarise(count = n())
ggplot(affirmRemand, aes(x=term, y=count, group=disposition)) +
geom_line()+
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
ylab("Count") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
ggplot(affirmRemand, aes(x=term, y=count, group=disposition, color=disposition)) +
geom_line()+
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
ylab("Count") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
issueArea <- dat %>%
group_by(issue_area, term) %>%
summarise(count = n())
ggplot(issueArea, aes(x=term, y=count, group=issue_area, color=issue_area)) +
geom_line()+
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
ylab("Count") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
issueArea <- dat %>%
group_by(issue_area, term) %>%
summarise(count = n()) %>%
mutate(per = count / sum(count))
View(issueArea)
issueArea <- dat %>%
group_by(issue_area, term) %>%
summarise(count = n()) %>%
issueArea <- dat %>%
group_by(issue_area, term) %>%
summarise(count = n()) %>%
group_by(term) %>%
summarise(per = count / sum(count))
issueArea <- dat %>%
group_by(issue_area, term) %>%
summarise(count = n())
issueAreaPer <- issueArea %>%
group_by(term) %>%
summarise(per = count / sum(count))
View(issueAreaPer)
issueAreaPer <- issueArea %>%
group_by(term)
issueAreaPer <- issueArea %>%
group_by(term) %>%
summarise(per = count / sum(count))
View(issueAreaPer)
issueAreaPer <- issueArea %>%
group_by(term, issue_area) %>%
summarise(per = count / sum(count))
View(issueAreaPer)
issueArea <- dat %>%
group_by(issue_area, term) %>%
summarise(count = n())
ggplot(issueArea, aes(x=term, y=count, group=issue_area, color=issue_area)) +
geom_line()+
theme_minimal() +
xlab("Term") +
scale_x_continuous(breaks=seq(1950, 2050, 10)) +
ylab("Count") +
theme(
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
text = element_text(family = "Palatino", size = 10),
axis.title.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
)
rm(list = ls()) # clear global environ
knitr::opts_chunk$set(echo = TRUE, cache = TRUE, warning = FALSE, message = FALSE)
wd <- "/Users/numikatz/Documents/Senior_Year/Spring_22/PLSC_468/PLSC_468/plsc468_psets"
# load libraries
library(tidyverse)
library(broom)
library(glmnet)
set.seed(1005)
load(file = "pset4/platforms.Rdata")
load(file=Users/numikatz/Documents/Senior_Year/Spring_22/PLSC_468/PLSC_468/platforms.Rdata)
load(file="Users/numikatz/Documents/Senior_Year/Spring_22/PLSC_468/PLSC_468/platforms.Rdata")
load(file = "PLSC_468/pset4/platforms.Rdata")
getwd()
load(file = "platforms.Rdata")
# divide into test and training
N=nrow(tdoc)
s.vec=sample(1:2,replace=T,prob=c(1/2, 1/2),size=N)
# train with 1/2 of known
x.train <- tdoc[which(s.vec==1),]
y.train <- pty[which(s.vec==1)]
# test with other 1/2 of known
x.test <- tdoc[which(s.vec==2),]
y.test <- pty[which(s.vec==2)]
# given parameter
lambda = 5056/478
# train
ridge_reg <- glmnet(x.train, y.train, alpha = 0, lambda = lambda)
# test
test_1a <- ridge_reg$a0+x.test%*%ridge_reg$beta[,1]
tau=(min(test_1a[y.test==-1])+max(test_1a[y.test==1]))/2
y.pred <- as.numeric(test_1a>tau)
y.pred[y.pred == 0] <- -1
# calculate accuracy
sub.vector <- y.pred - y.test # 0's indicate correct classification
accuracy <- sum(sub.vector == 0) / length(sub.vector)
lasso_reg <- glmnet(x.train, y.train, alpha = 1, lambda = lambda)
# test
test_1b <- lasso_reg$a0+x.test%*%lasso_reg$beta[,1]
tau=(min(test_1b[y.test==-1])+max(test_1b[y.test==1]))/2
y.pred <- as.numeric(test_1b>tau)
y.pred[y.pred == 0] <- -1
# calculate accuracy
sub.vector <- y.pred - y.test # 0's indicate correct classification
accuracy <- sum(sub.vector == 0) / length(sub.vector)
# initial tuning range
k=10
alpha=seq(from=0,to=1,by=0.1)
lambda=seq(from=0.5,to=10.5,by=0.5)
sumMSE=matrix(NA,length(alpha),length(lambda))
for(i in 1:length(alpha)){
oo=cv.glmnet(nfolds=k,x=x.train, y=y.train, family=c("gaussian"),nlambda=length(lambda),
alpha=alpha[i],lambda=lambda)
if(length(oo$cvm)==length(sumMSE[i,])){
sumMSE[i,]=oo$cvm
}
}
# identifiying alpha and lamda that minimizes MSE
for(i in 1:length(alpha)){
if(length(which(sumMSE[i,]==min(sumMSE)))>0){break}
}
alpha[i]
lambda[which(sumMSE[i,]==min(sumMSE))]
# run final optimized model
oo=glmnet(x=x.train, y=y.train, family=c("gaussian"),
alpha=alpha[i],lambda=lambda[which(sumMSE[i,]==min(sumMSE))])
# train
prd.train=predict(oo,x.train)
tau=(min(prd.train[y.train==-1])+max(prd.train[y.train==1]))/2
table(y.train,as.numeric(prd.train>tau))
# test
prd.test=predict(oo,x.test)
table(y.test,as.numeric(prd.test>tau))
# test
test_1b <- lasso_reg$a0+x.test%*%lasso_reg$beta[,1]
tau=(min(test_1b[y.test==-1])+max(test_1b[y.test==1]))/2
y.pred <- as.numeric(prd.test>tau)
y.pred[y.pred == 0] <- -1
# calculate accuracy
sub.vector <- y.pred - y.test # 0's indicate correct classification
accuracy <- sum(sub.vector == 0) / length(sub.vector)
rm(list = ls())
library(dplyr)
library(foreign)
library(ggplot2)
library(survey)
library(tidyverse)
# Data  -------------------------------------------------------------------
getwd()
setwd("/Users/numikatz/Documents/Spring_22/Final/")
# Data  -------------------------------------------------------------------
getwd()
setwd("/Users/numikatz/Documents/Spring_22/Final/")
