rm(list = ls()) # clear global environ
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
# set working directory (change for each user)
wd <- "/Users/kellyfarley/Desktop/machine_learning/plsc468_psets"
#wd <- "/Users/numikatz/Documents/Senior_Year/Spring_22/PLSC_468/PLSC_468/plsc468_psets"
knitr::opts_knit$set(root.dir = wd)
# load libraries
load(file = "pset2/federalists.Rdata")
wd
load(file = "pset2/federalists.Rdata")
rm(list = ls()) # clear global environ
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
# set working directory (change for each user)
wd <- "/Users/kellyfarley/Desktop/machine_learning/plsc468_psets"
#wd <- "/Users/numikatz/Documents/Senior_Year/Spring_22/PLSC_468/PLSC_468/plsc468_psets"
knitr::opts_knit$set(root.dir = wd)
wd
load(file = "pset2/federalists.Rdata")
head(papers)
library(stringr)
library(tm)
load('/Users/kellyfarley/Desktop/machine_learning/Class/Code/ads.Rdata')
ads$party_by_office=ads$party*(ads$office+1)
head(ads)
ads$texts=str_trim(ads$texts)
head(ads)
stops=read.table('~/Documents/Yale/courses/spring2022/measurement/RCode/stops.txt',stringsAsFactors=F)[,1]
stopwords("en"
)
rm(list = ls()) # clear global environ
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
# set working directory (change for each user)
wd <- "/Users/kellyfarley/Desktop/machine_learning/plsc468_psets"
#wd <- "/Users/numikatz/Documents/Senior_Year/Spring_22/PLSC_468/PLSC_468/plsc468_psets"
knitr::opts_knit$set(root.dir = wd)
# load libraries
library(stringr)
library(tm)
library(tidyverse)
stops <- stopwords(kind = "en")
stops
load(file = "pset2/federalists.Rdata")
head(papers)
names(papers)
str(papers)
stops <- c(gsub(stops, pattern="[']", replace=''))
stops
load('/Users/kellyfarley/Desktop/machine_learning/Class/Code/ads.Rdata')
ads$party_by_office=ads$party*(ads$office+1)
ads$texts=str_trim(ads$texts)
stops <- stopwords(kind = "en")
stops <- c(gsub(stops, pattern="[']", replace=''))
cands=sort(unique(ads$cand))
str(ads)
load(file = "pset2/federalists.Rdata")
str(papers)
View(papers)
papers$papers
papers[[papers]]
colnames(papers)
papers$papers
papers[["papers"]]
papers[,1]
texts=VCorpus(VectorSource(ads$texts))
str(texts)
rm(list = ls()) # clear global environ
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
# set working directory (change for each user)
wd <- "/Users/kellyfarley/Desktop/machine_learning/plsc468_psets"
#wd <- "/Users/numikatz/Documents/Senior_Year/Spring_22/PLSC_468/PLSC_468/plsc468_psets"
knitr::opts_knit$set(root.dir = wd)
# load libraries
library(stringr)
library(tm)
library(tidyverse)
load(file = "pset2/federalists.Rdata")
# using stop words from stopword() package
stops <- stopwords(kind = "en")
# note apostrophes are not removed in stops, but are in our texts
stops <- c(gsub(stops, pattern="[']", replace=''))
# make corpus
texts=VCorpus(VectorSource(papers[,1]))
# remove non stop words
dtm = as.matrix(DocumentTermMatrix(texts))
non.stops=array(TRUE,ncol(dtm))
stops=sort(stops)
col.names=colnames(dtm)
for(j in 1:length(stops)){
ik=which(stops[j]==col.names)
if(length(ik)>0){
non.stops[ik]=F
}
}
on.dtm  = dtm[,non.stops]
stop.dtm = dtm[,!non.stops]
plot(rowSums(non.dtm),ylim=c(0,100))
non.dtm  = dtm[,non.stops]
stop.dtm = dtm[,!non.stops]
plot(rowSums(non.dtm),ylim=c(0,100))
points(rowSums(stop.dtm),col='red')
non.dtm  = dtm[,non.stops]
stop.dtm = dtm[,!non.stops]
plot(rowSums(non.dtm),ylim=c(0,100))
points(rowSums(stop.dtm),col='red')
dtm = as.matrix(DocumentTermMatrix(texts))
non.stops=array(TRUE,ncol(dtm))
stops=sort(stops)
col.names=colnames(dtm)
for(j in 1:length(stops)){
ik=which(stops[j]==col.names)
if(length(ik)>0){
non.stops[ik]=F
}
}
non.dtm  = dtm[,non.stops]
stop.dtm = dtm[,!non.stops]
plot(rowSums(non.dtm),ylim=c(0,100))
points(rowSums(stop.dtm),col='red')
stop.dtm
non.dtm
N=nrow(papers)
set.seed(1005)
s.vec=sample(1:3,replace=T,prob=c(1/3,1/3,1/3),size=N)
x.train=stop.dtm[which(s.vec==1),]
y.train=ads$office[which(s.vec==1)]
names(papers)
colnames(papers)
papers$classes
papers[,2][which(s.vec==1)]
N=nrow(papers)
s.vec=sample(1:3,replace=T,prob=c(1/3,1/3,1/3),size=N)
s.vec
x.train=stop.dtm[which(s.vec==1),]
x.train
y.train=papers[,2][which(s.vec==1)]
y.train
x.test=stop.dtm[which(s.vec==2),]
y.test=papers[,2][which(s.vec==2)]
y.test
x.pred=stop.dtm[which(s.vec==3),]
x.pred
N
table(papers[,1])
table(papers[,2])
papers_test <- as.data.frame(papers)
str(papers_test)
names(papers_test)
papers_test$classes
subset(papers_test, classes != "disputed")
stop.dtm
View(knownpapers)
papers <- as.data.frame(papers)
knownpapers <- subset(papers_test, classes != "disputed")
